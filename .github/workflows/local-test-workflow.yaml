---
name: Local Test Workflow
on:
  workflow_call:
    inputs:
      GIT_EMAIL:
        description: "The email address to use for Git commits."
        required: true
        type: string
      GIT_USERNAME:
        description: "The username to use for Git commits."
        required: true
        type: string
    secrets:
      GITHUB_TOKEN_PROJECT:
        description: "The GitHub token used for authentication with the repository."
        required: true
      GPG_PRIVATE_KEY:
        description: "The GPG private key used for signing commits and tags."
        required: false
      GPG_PRIVATE_KEY_ID:
        description: "The ID of the GPG private key used for signing commits and tags."
        required: false
      SSH_PRIVATE_KEY:
        description: "The SSH private key used for authentication with Git over SSH."
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_reference: ${{ steps.build.outputs.image_reference }}
      image_tar_artifact_name: ${{ steps.save.outputs.image_tar_artifact_name }}
      image_tar_file_path: ${{ steps.save.outputs.image_tar_file_path }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Build the Image
        id: build
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          retry_wait_seconds: 60
          command: |
            docker build --tag ghcr.io/${{ github.repository }}:${{ github.sha }} .
            echo "image_reference=ghcr.io/${{ github.repository }}:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Save Docker image to tarball
        id: save
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_wait_seconds: 10
          command: |
            docker save ghcr.io/${{ github.repository }}:${{ github.sha }} -o ${{ github.sha }}.tar
            echo "image_tar_artifact_name=docker-image-${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "image_tar_file_path=${{ github.sha }}.tar" >> $GITHUB_OUTPUT

      - name: Upload image tarball as artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: docker-image-${{ github.sha }}
          path: ${{ github.sha }}.tar

  security:
    needs: build
    # Due to circular dependency, this project makes a reference to the head branch
    uses: juancarlosjr97/github-actions-workflows-to-rule-them-all/.github/workflows/shared-docker-security.yml@main
    with:
      IMAGE_REFERENCE: ${{ needs.build.outputs.image_reference }}
      IMAGE_TAR_ARTIFACT_NAME: ${{ needs.build.outputs.image_tar_artifact_name }}
      IMAGE_TAR_FILE_PATH: ${{ needs.build.outputs.image_tar_file_path }}

  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Download Docker image artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: ${{ needs.build.outputs.image_tar_artifact_name }}
          path: .

      - name: Load Docker image from TAR
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 5
          max_attempts: 3
          retry_wait_seconds: 10
          command: docker load -i ${{ needs.build.outputs.image_tar_file_path }}

      - name: Running release-it on dry-run without GPG or SSH
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker run \
              -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN_PROJECT }} \
              -e GIT_DIRECTORY="/app" \
              -e GIT_EMAIL=${{ inputs.GIT_EMAIL }} \
              -e GIT_USERNAME="${{ inputs.GIT_USERNAME }}" \
              -e RELEASE_IT_PLUGINS="@release-it/conventional-changelog@latest,@release-it/bumper@latest" \
              -v $PWD:/app \
              ghcr.io/${{ github.repository }}:${{ github.sha }} \
              release-it --dry-run --ci

      - name: Running release-it on dry-run with GPG and without SSH
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker run \
              -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN_PROJECT }} \
              -e GIT_DIRECTORY="/app" \
              -e GIT_EMAIL=${{ inputs.GIT_EMAIL }} \
              -e GIT_USERNAME="${{ inputs.GIT_USERNAME }}" \
              -e GPG_PRIVATE_KEY="${{ secrets.GPG_PRIVATE_KEY }}" \
              -e GPG_PRIVATE_KEY_ID="${{ secrets.GPG_PRIVATE_KEY_ID }}" \
              -e RELEASE_IT_PLUGINS="@release-it/conventional-changelog@latest,@release-it/bumper@latest" \
              -v $PWD:/app \
              ghcr.io/${{ github.repository }}:${{ github.sha }} \
              release-it --dry-run --ci

      - name: Running release-it on dry-run with GPG and SSH
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 30
          command: |
            docker run \
              -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN_PROJECT }} \
              -e GIT_DIRECTORY="/app" \
              -e GIT_EMAIL=${{ inputs.GIT_EMAIL }} \
              -e GIT_USERNAME="${{ inputs.GIT_USERNAME }}" \
              -e GPG_PRIVATE_KEY="${{ secrets.GPG_PRIVATE_KEY }}" \
              -e GPG_PRIVATE_KEY_ID="${{ secrets.GPG_PRIVATE_KEY_ID }}" \
              -e RELEASE_IT_PLUGINS="@release-it/conventional-changelog@latest,@release-it/bumper@latest" \
              -e SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}" \
              -v $PWD:/app \
              ghcr.io/${{ github.repository }}:${{ github.sha }} \
              release-it --dry-run --ci

      - name: Running release-it using GitHub Action
        uses: ./
        with:
          command: "--dry-run"
          git_email: ${{ inputs.GIT_EMAIL }}
          git_username: ${{ inputs.GIT_USERNAME }}
          github_token: ${{ secrets.GITHUB_TOKEN_PROJECT }}
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_private_key_id: ${{ secrets.GPG_PRIVATE_KEY_ID }}
          image_tag: ${{ github.sha }}
          plugins_list: "@release-it/conventional-changelog@latest,@release-it/bumper@latest"
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
