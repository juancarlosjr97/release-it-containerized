---
name: Test
on:
  push:
    branches:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Build the Image
        run: docker build --tag ghcr.io/${{ github.repository }}:${{ github.sha }} .

      - name: Save Docker image to tarball
        run: docker save ghcr.io/${{ github.repository }}:${{ github.sha }} -o ${{ github.sha }}.tar

      - name: Upload image tarball as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-${{ github.sha }}
          path: ${{ github.sha }}.tar

  security:
    needs: build
    uses: juancarlosjr97/github-actions-workflows-to-rule-them-all/.github/workflows/image-security.yml@4050a248a71d675feef6287cd0a018563b198d9e
    with:
      IMAGE_TAG: ghcr.io/${{ github.repository }}:${{ github.sha }}
      IMAGE_TAR_ARTIFACT_NAME: docker-image-${{ github.sha }}
      IMAGE_TAR_FILE_PATH: ${{ github.sha }}.tar

  tests:
    needs: security
    runs-on: ubuntu-latest
    steps:
      - name: Running release-it on dry-run without GPG or SSH
        run: |
          docker run \
            -e GITHUB_TOKEN=${GITHUB_TOKEN} \
            -e GIT_DIRECTORY="/app" \
            -e GIT_EMAIL=${GIT_EMAIL} \
            -e GIT_USERNAME="${GIT_USERNAME}" \
            -e RELEASE_IT_PLUGINS="@release-it/conventional-changelog@latest,@release-it/bumper@latest" \
            -v $PWD:/app \
            ghcr.io/${{ github.repository }}:${{ github.sha }} \
            release-it --dry-run --ci
        env:
          GIT_EMAIL: ${{ vars.GIT_EMAIL }}
          GIT_USERNAME: ${{ vars.GIT_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.PROJECT_GITHUB_TOKEN }}

      - name: Running release-it on dry-run with GPG and without SSH
        run: |
          docker run \
            -e GITHUB_TOKEN=${GITHUB_TOKEN} \
            -e GIT_DIRECTORY="/app" \
            -e GIT_EMAIL=${GIT_EMAIL} \
            -e GIT_USERNAME="${GIT_USERNAME}" \
            -e GPG_PRIVATE_KEY="${GPG_PRIVATE_KEY}" \
            -e GPG_PRIVATE_KEY_ID="${GPG_PRIVATE_KEY_ID}" \
            -e RELEASE_IT_PLUGINS="@release-it/conventional-changelog@latest,@release-it/bumper@latest" \
            -v $PWD:/app \
            ghcr.io/${{ github.repository }}:${{ github.sha }} \
            release-it --dry-run --ci
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_GITHUB_TOKEN }}
          GIT_EMAIL: ${{ vars.GIT_EMAIL }}
          GIT_USERNAME: ${{ vars.GIT_USERNAME }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PRIVATE_KEY_ID: ${{ secrets.GPG_PRIVATE_KEY_ID }}

      - name: Running release-it on dry-run with GPG and SSH
        run: |
          docker run \
            -e GITHUB_TOKEN=${GITHUB_TOKEN} \
            -e GIT_DIRECTORY="/app" \
            -e GIT_EMAIL=${GIT_EMAIL} \
            -e GIT_USERNAME="${GIT_USERNAME}" \
            -e GPG_PRIVATE_KEY="${GPG_PRIVATE_KEY}" \
            -e GPG_PRIVATE_KEY_ID="${GPG_PRIVATE_KEY_ID}" \
            -e RELEASE_IT_PLUGINS="@release-it/conventional-changelog@latest,@release-it/bumper@latest" \
            -e SSH_PRIVATE_KEY="${SSH_PRIVATE_KEY}" \
            -v $PWD:/app \
            ghcr.io/${{ github.repository }}:${{ github.sha }} \
            release-it --dry-run --ci
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_GITHUB_TOKEN }}
          GIT_EMAIL: ${{ vars.GIT_EMAIL }}
          GIT_USERNAME: ${{ vars.GIT_USERNAME }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PRIVATE_KEY_ID: ${{ secrets.GPG_PRIVATE_KEY_ID }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Running release-it using GitHub Action
        uses: ./
        with:
          command: "--dry-run"
          git_email: ${{ vars.GIT_EMAIL }}
          git_username: ${{ vars.GIT_USERNAME }}
          github_token: ${{ secrets.PROJECT_GITHUB_TOKEN }}
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_private_key_id: ${{ secrets.GPG_PRIVATE_KEY_ID }}
          image_tag: ${{ github.sha }}
          plugins_list: "@release-it/conventional-changelog@latest,@release-it/bumper@latest"
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
